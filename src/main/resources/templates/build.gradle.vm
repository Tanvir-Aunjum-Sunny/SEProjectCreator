#* @vtlvariable name="generateHtml5" type="boolean" *#
#* @vtlvariable name="generateAndroid" type="boolean" *#
#* @vtlvariable name="generateDesktop" type="boolean" *#

allprojects {
    apply plugin: "eclipse"

    // Define the versions of all the dependencies
    project.ext {
        #if (${generateHtml5})
        gwtVersion          = "2.8.1"
        webgl4jVersion      = "0.2.9-SNAPSHOT"
        gwtAlVersion        = "0.2-SNAPSHOT"
        gwtOpentypeVersion  = "0.1-SNAPSHOT"
        #end

        #if (${generateAndroid})
        openAlAndroidVersion = "0.3-SNAPSHOT"
        retrolambdaVersion   = "2.5.1"
        #end

        #if (${generateDesktop})
        lwjglVersion = "3.1.3-SNAPSHOT"
        #end

        streamsVersion  = "1.0.3"
        easyXmlVersion  = "0.1"
        easyJsonVersion = "0.3"
    }
}

#if (${generateHtml5} || ${generateAndroid})
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        #if (${generateHtml5})
        classpath "org.wisepersist:gwt-gradle-plugin:1.0.0"
        #end

        #if (${generateAndroid})
        classpath "com.android.tools.build:gradle:2.3.0"
        classpath "me.tatarka:gradle-retrolambda:3.2.5"
        classpath "me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2"
        #end
    }

    #if (${generateAndroid})
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
    #end
}
#end

subprojects {
    apply plugin: "maven"

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

        #if (${generateAndroid})
        maven { url "https://oss.sonatype.org/content/repositories/google-snapshots/" }
        #end
    }
}

project(":${className}Core") {
    apply plugin: "java"

    dependencies {
        compile files("../libs/silenceengine.jar")
        compile "com.goharsha:easyxml:${easyXmlVersion}:@jar"
        compile "com.goharsha:easyjson:${easyJsonVersion}:@jar"
    }
}

#if (${generateHtml5})
project(":${className}Html5") {
    apply plugin: "java"

    dependencies {
        compile project(":${className}Core")
        compile files("../libs/backend-gwt.jar")
        compile files("../libs/silenceengine-sources.jar")

        compile "com.goharsha:webgl4j:${webgl4jVersion}"
        compile "com.goharsha:gwt-al:${gwtAlVersion}"
        compile "com.goharsha:gwt-opentype:${gwtOpentypeVersion}"
        compile "com.google.gwt:gwt-user:${gwtVersion}"
        compile "com.goharsha:easyxml:${easyXmlVersion}:gwt"
        compile "com.goharsha:easyjson:${easyJsonVersion}:gwt"
    }
}
#end

#if (${generateDesktop})
project(":${className}Desktop") {
    apply plugin: "java"

    dependencies {
        compile project(":${className}Core")
        compile files("../libs/backend-lwjgl.jar")

        compile "org.lwjgl:lwjgl:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
        compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}"

        compile "org.lwjgl:lwjgl:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-linux"
        compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}:natives-windows"
        compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}:natives-macos"
        compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}:natives-linux"
    }
}
#end

#if (${generateAndroid})
project(":${className}Android") {
    apply plugin: "com.android.application"
    apply plugin: "me.tatarka.retrolambda"

    dependencies {
        provided project(":${className}Core")
        provided files("../libs/silenceengine.jar")

        debugCompile (name:'backend-android-debug', ext:'aar')
        releaseCompile (name:'backend-android-release', ext:'aar')

        provided "com.goharsha:easyxml:${easyXmlVersion}:@jar"
        provided "com.goharsha:easyjson:${easyJsonVersion}:@jar"

        compile "com.annimon:stream:${streamsVersion}"
        compile "com.goharsha:android-openal:${openAlAndroidVersion}"

        retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:${retrolambdaVersion}"
    }

    repositories {
        mavenCentral()
        flatDir {
            dirs '../libs'
        }
    }
}
#end